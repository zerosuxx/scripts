#!/usr/bin/env bash
# version: 4.0.0

set -eo pipefail

export project_name="$1"

if [ -z "${project_name}" ]; then
  echo "Usage: `basename $0` PROJECT_NAME [FILES_PATTERN]"
  echo "example: `basename $0` project '/tmp/*.yml'"

  exit 1
fi

function convert_to_file_content_env() {
  local name=$(echo "$1" | tr '-' '_' | tr '.' '_' | tr '[:lower:]' '[:upper:]')
  
  echo "FILE_CONTENT_${name}_BASE64"
}

files_pattern="$2"
chunk_max_length=9999

: ${JOB_NAME:="trigger"}

contents=$(yq e '.stages[0] = "trigger"' -n)
contents=$(echo "$contents" | yq e '.'${JOB_NAME}'.stage = "trigger"')
contents=$(echo "$contents" | yq e '.'${JOB_NAME}'.trigger.project = strenv(project_name)')
contents=$(echo "$contents" | yq e '.'${JOB_NAME}'.trigger.strategy = "depend"')

for file in ${files_pattern}; do
  export file_name=$(basename "${file}")
  export file_content_base64=$(cat "${file}" | base64 -w 0)
  export chunks=$(echo "${file_content_base64}" | fold -w "${chunk_max_length}")
  export chunks_length=$(echo "${chunks}" | wc -l)

  if [ "${chunks_length}" -gt 1 ]; then
    i=1
    for chunk in ${chunks}; do 
      export key="$(convert_to_file_content_env "${file_name}_part${i}")"
      export value="${chunk}"
      contents=$(echo "$contents" | yq e '.'${JOB_NAME}'.variables += {strenv(key):strenv(value)}')
      i=$((i+1))
    done
  else
    export key="$(convert_to_file_content_env "${file_name}")"
    contents=$(echo "$contents" | yq e '.'${JOB_NAME}'.variables += {strenv(key):strenv(file_content_base64)}')
  fi
done

for env in ${!ENV*}; do
  export key="${env:4}"
  export value=$(printenv "${env}")

  contents=$(echo "$contents" | yq e '.'${JOB_NAME}'.variables += {strenv(key):strenv(value)}')
done

echo "$contents"
