#!/usr/bin/env bash
# version: 0.5.1

set -euo pipefail

: ${LOCKFILE:="pnpm-lock.yaml"}
: ${PACKAGE_JSON:="package.json"}
: ${DRY_RUN:="false"}

if [[ ! -f "$LOCKFILE" ]]; then
  echo "Error: $LOCKFILE not found!" >&2
  exit 1
fi

if [[ ! -f "$PACKAGE_JSON" ]]; then
  echo "Error: $PACKAGE_JSON not found!" >&2
  exit 1
fi

for tool in jq yq diff; do
  if ! command -v "$tool" >/dev/null 2>&1; then
    echo "Error: Required tool '$tool' is not installed or not in PATH." >&2
    exit 1
  fi
done

lockfile=$(cat "$LOCKFILE")
original_pkg_json=$(cat "$PACKAGE_JSON")
pkg_json="$original_pkg_json"

if echo "$lockfile" | yq 'has("importers")' | grep -q true; then
  lock_selector_prefix=".importers.\"."
else
  lock_selector_prefix=""
fi

for section in dependencies devDependencies; do
  echo "Processing $section..."

  packages=$(echo "$lockfile" | yq "${lock_selector_prefix}.${section} | keys | .[]" || true)
  if [[ -z "$packages" ]]; then
    continue
  fi

  for pkg in $packages; do
    raw_version=$(echo "$lockfile" | yq "${lock_selector_prefix}.${section}.\"$pkg\".version" | cut -d'(' -f1)
    specifier=$(echo "$lockfile" | yq "${lock_selector_prefix}.${section}.\"$pkg\".specifier")

    echo " - $pkg@$specifier -> $raw_version $([ "$specifier" = "$raw_version" ] && echo âœ… || echo ðŸ”„)"

    pkg_json=$(echo "$pkg_json" | jq --arg section "$section" \
                                    --arg pkg "$pkg" \
                                    --arg ver "$raw_version" \
                                    '
                                    if .[$section][$pkg] != null then
                                      .[$section][$pkg] = $ver
                                    else
                                      .
                                    end
                                    ')
  done
done

if [[ $DRY_RUN != "true" ]]; then
  echo "$pkg_json" | jq . > "$PACKAGE_JSON"
else
  echo "ðŸ”Ž Diffing changes (dry-run):"
  diff --color=always <(echo "$original_pkg_json" | jq .) <(echo "$pkg_json" | jq .) || true
fi

echo "âœ… package.json updated with exact versions!"
